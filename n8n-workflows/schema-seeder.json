{
  "name": "Vector DB - Schema Seeder (One-Time)",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "seed-schemas",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "webhook-trigger",
      "name": "Webhook Trigger - Seed Schemas",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1.1,
      "position": [50, 300],
      "webhookId": "seed-schemas-webhook"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "schemas-array",
              "name": "schemas",
              "value": "={{ $json.body.schemas || [] }}",
              "type": "array"
            }
          ]
        },
        "options": {}
      },
      "id": "get-schemas",
      "name": "Get Schemas from Request",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3,
      "position": [250, 300]
    },
    {
      "parameters": {
        "jsCode": "// Get schemas from webhook body and split into individual items\nconst schemas = $input.item.json.body.schemas || [];\n\n// Return each schema as a separate item for processing\nreturn schemas.map(schema => ({\n  json: schema\n}));"
      },
      "id": "split-into-items",
      "name": "Split Into Items",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [450, 300]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://host.docker.internal:11434/api/embeddings",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ {\n  model: 'all-minilm',\n  prompt: $json.user_prompt\n} }}",
        "options": {}
      },
      "id": "generate-embedding",
      "name": "Generate Embedding",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [1050, 300]
    },
    {
      "parameters": {
        "method": "PUT",
        "url": "=http://host.docker.internal:6333/collections/successful_schemas/points",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ {\n  points: [\n    {\n      id: Date.now() + Math.floor(Math.random() * 1000),\n      vector: $json.embedding,\n      payload: {\n        user_prompt: $json.user_prompt,\n        schema: $json.schema,\n        rating: 'thumbs_up',\n        timestamp: new Date().toISOString(),\n        seeded: true\n      }\n    }\n  ]\n} }}",
        "options": {}
      },
      "id": "insert-to-qdrant",
      "name": "Insert to Qdrant",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [1250, 300]
    },
    {
      "parameters": {
        "jsCode": "return [\n  {\n    json: {\n      success: true,\n      total_seeded: $input.all().length,\n      schemas: $input.all().map(item => ({\n        prompt: item.json.user_prompt || 'unknown',\n        fields: item.json.schema?.length || 0\n      }))\n    }\n  }\n];"
      },
      "id": "summary",
      "name": "Summary",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1450, 300]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ $('Summary').item.json }}",
        "options": {}
      },
      "id": "respond-to-webhook",
      "name": "Respond to Webhook",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [1650, 300]
    }
  ],
  "connections": {
    "Webhook Trigger - Seed Schemas": {
      "main": [
        [
          {
            "node": "Get Schemas from Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Schemas from Request": {
      "main": [
        [
          {
            "node": "Split Into Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Into Items": {
      "main": [
        [
          {
            "node": "Generate Embedding",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Embedding": {
      "main": [
        [
          {
            "node": "Insert to Qdrant",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Insert to Qdrant": {
      "main": [
        [
          {
            "node": "Summary",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Summary": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-10-13T00:00:00.000Z",
  "versionId": "1"
}

