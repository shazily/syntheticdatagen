{
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "manage-domain-fixed",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "985c1d6c-c3b8-4ec6-a021-4b5421148857",
      "name": "Webhook Trigger",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [-656, -144],
      "webhookId": "manage-domain-fixed"
    },
    {
      "parameters": {
        "url": "http://host.docker.internal:11434/api/embeddings",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ { model: 'all-minilm', prompt: $json.body.domain } }}",
        "requestMethod": "POST",
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "id": "7f05db4b-ced7-46e2-b107-85096d43e706",
      "name": "Generate Embedding",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [-432, -144]
    },
    {
      "parameters": {
        "jsCode": "// Extract embedding and prepare document for Qdrant\nconst embeddingData = $input.item.json;\nconst embedding = embeddingData.embedding;\n\nif (!embedding || !Array.isArray(embedding)) {\n  throw new Error('Failed to generate embedding');\n}\n\n// Get original data from webhook\nconst originalData = $('Webhook Trigger').item.json.body;\nconst { domain, schema, action } = originalData;\n\n// Generate unique ID\nconst domainId = `domain_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n\n// Prepare document in the format expected by n8n Qdrant Vector Store\nconst document = {\n  pageContent: `Domain: ${domain}\\nSchema: ${JSON.stringify(schema, null, 2)}\\nAction: ${action}`,\n  metadata: {\n    domain: domain,\n    action: action,\n    timestamp: new Date().toISOString(),\n    schema_fields: schema.length,\n    user_prompt: domain,\n    schema: JSON.stringify(schema),\n    domain_id: domainId\n  }\n};\n\nreturn {\n  json: {\n    document: document,\n    embedding: embedding,\n    domainId: domainId,\n    action: action\n  }\n};"
      },
      "id": "4316020a-3fd8-436b-87e1-7d7468d20ff0",
      "name": "Prepare Document",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [-224, -144]
    },
    {
      "parameters": {
        "mode": "insert",
        "qdrantCollection": {
          "__rl": true,
          "value": "successful_schemas",
          "mode": "list",
          "cachedResultName": "successful_schemas"
        },
        "options": {}
      },
      "id": "db6bf4e8-94b2-443e-ae62-9abfe61b98a3",
      "name": "Insert to Qdrant",
      "type": "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
      "typeVersion": 1,
      "position": [-64, -144],
      "credentials": {
        "qdrantApi": {
          "id": "3GkW3v6QuMuEQfVp",
          "name": "QdrantApi account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Prepare success response\nconst domainId = $('Prepare Document').item.json.domainId;\nconst action = $('Prepare Document').item.json.action;\n\nreturn {\n  json: {\n    success: true,\n    message: `Domain ${action} successfully with native Qdrant node`,\n    domainId: domainId,\n    action: action,\n    timestamp: new Date().toISOString(),\n    embedding_length: $('Prepare Document').item.json.embedding.length\n  }\n};"
      },
      "id": "f9b4da70-b71c-4e4c-b291-f5847936646f",
      "name": "Success Response",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [288, -144]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ $json }}",
        "options": {}
      },
      "id": "494f5a8d-11d7-4bc2-bd9c-d2173601098d",
      "name": "Respond to Webhook",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [448, -144]
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.embeddingsOllama",
      "typeVersion": 1,
      "position": [-16, 64],
      "id": "7b6fead3-1b16-4b88-8835-5d9c2b8c0d3e",
      "name": "Embeddings Ollama",
      "credentials": {
        "ollamaApi": {
          "id": "jmFnQptmLMNT8nwD",
          "name": "Ollama account 2"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "typeVersion": 1.1,
      "position": [80, 64],
      "id": "3ef4ddbf-2b98-4a19-997f-25e4d53b0e88",
      "name": "Default Data Loader"
    }
  ],
  "connections": {
    "Webhook Trigger": {
      "main": [
        [
          {
            "node": "Generate Embedding",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Embedding": {
      "main": [
        [
          {
            "node": "Prepare Document",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepare Document": {
      "main": [
        [
          {
            "node": "Insert to Qdrant",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Insert to Qdrant": {
      "main": [
        [
          {
            "node": "Success Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Success Response": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings Ollama": {
      "ai_embedding": [
        [
          {
            "node": "Insert to Qdrant",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader": {
      "ai_document": [
        [
          {
            "node": "Insert to Qdrant",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "528341b2e86c53477b94f918c416779dab805188fc81ebe05aeea5067b309de6"
  }
}
